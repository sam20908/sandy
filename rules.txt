expr -> eq
eq -> cmp (OpKind::Cmp('==' | '!=') cmp)*
cmp -> term (OpKind::Cmp('<' | '>' | '<=' | '>=') term)*
term -> factor (OpKind::Binary('+' | '-') factor)*
factor -> unary (OpKind::Binary('*' | '/') unary)*
unary -> OpKind::Unary unary | primary
primary -> LiteralKind | OpKind::LBracket('(') expr OpKind::RBracket(')')
